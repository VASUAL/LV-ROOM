{"remainingRequest":"C:\\Users\\Administrator\\Documents\\HBuilderProjects\\LV Room\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Documents\\HBuilderProjects\\LV Room\\src\\App.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\Documents\\HBuilderProjects\\LV Room\\src\\App.vue","mtime":1639653944118},{"path":"C:\\Users\\Administrator\\Documents\\HBuilderProjects\\LV Room\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1639127486947},{"path":"C:\\Users\\Administrator\\Documents\\HBuilderProjects\\LV Room\\node_modules\\babel-loader\\lib\\index.js","mtime":1639127491233},{"path":"C:\\Users\\Administrator\\Documents\\HBuilderProjects\\LV Room\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1639127486947},{"path":"C:\\Users\\Administrator\\Documents\\HBuilderProjects\\LV Room\\node_modules\\vue-loader\\lib\\index.js","mtime":1639127490484}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n\nimport Main from './components/Main.vue'\r\n//import Lodash from 'lodash'\r\n\nexport default {\n  name: 'app',\n  components: {\n    Main\n  },\r\n /* mounted () {\r\n      this.$nextTick(() => {\r\n        const $app = this.$refs.app\r\n        const standardScale = 1080 / 1920\r\n  \r\n        window.addEventListener(\r\n          'resize',\r\n          _.debounce(function () {\r\n            const docHeight = document.body.clientHeight\r\n            const docWidth = document.body.clientWidth\r\n  \r\n            if (docWidth < 1680) {\r\n              const currentScale = docHeight / docWidth\r\n              let [scale, translate] = [0, 0]\r\n              if (currentScale < standardScale) {\r\n                // 以高度计算\r\n                scale = docHeight / 1080\r\n                const shouleWidth = 1920 * scale\r\n                const offsetWidth = docWidth - shouleWidth\r\n                translate = offsetWidth > 0 ? `translate(${offsetWidth / 2}px, 0)` : ''\r\n              } else {\r\n                // 以宽度计算\r\n                scale = docWidth / 1920\r\n                const shouleHeight = 1080 * scale\r\n                const offsetHeight = docHeight - shouleHeight\r\n                translate = offsetHeight > 0 ? `translate(0, ${offsetHeight / 2}px)` : ''\r\n              }\r\n              console.log(translate)\r\n              $app.style.cssText = `\r\n              transform: scale(${scale}) ${translate};\r\n              transform-origin: top left;\r\n              min-width: 1920px;\r\n              min-height: 1080px;\r\n            `\r\n            } else {\r\n              $app.style.cssText = ''\r\n            }\r\n          }),\r\n          200\r\n        )\r\n  \r\n        if (document.createEvent) {\r\n          var event = document.createEvent('HTMLEvents')\r\n          event.initEvent('resize', true, true)\r\n          window.dispatchEvent(event)\r\n        } else if (document.createEventObject) {\r\n          window.fireEvent('onresize')\r\n        }\r\n      })\r\n    }*/\n}\n",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;AAOA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\" ref=\"app\">\n\t<router-view></router-view>\n  </div>\n</template>\n\n<script>\nimport Main from './components/Main.vue'\r\n//import Lodash from 'lodash'\r\n\nexport default {\n  name: 'app',\n  components: {\n    Main\n  },\r\n /* mounted () {\r\n      this.$nextTick(() => {\r\n        const $app = this.$refs.app\r\n        const standardScale = 1080 / 1920\r\n  \r\n        window.addEventListener(\r\n          'resize',\r\n          _.debounce(function () {\r\n            const docHeight = document.body.clientHeight\r\n            const docWidth = document.body.clientWidth\r\n  \r\n            if (docWidth < 1680) {\r\n              const currentScale = docHeight / docWidth\r\n              let [scale, translate] = [0, 0]\r\n              if (currentScale < standardScale) {\r\n                // 以高度计算\r\n                scale = docHeight / 1080\r\n                const shouleWidth = 1920 * scale\r\n                const offsetWidth = docWidth - shouleWidth\r\n                translate = offsetWidth > 0 ? `translate(${offsetWidth / 2}px, 0)` : ''\r\n              } else {\r\n                // 以宽度计算\r\n                scale = docWidth / 1920\r\n                const shouleHeight = 1080 * scale\r\n                const offsetHeight = docHeight - shouleHeight\r\n                translate = offsetHeight > 0 ? `translate(0, ${offsetHeight / 2}px)` : ''\r\n              }\r\n              console.log(translate)\r\n              $app.style.cssText = `\r\n              transform: scale(${scale}) ${translate};\r\n              transform-origin: top left;\r\n              min-width: 1920px;\r\n              min-height: 1080px;\r\n            `\r\n            } else {\r\n              $app.style.cssText = ''\r\n            }\r\n          }),\r\n          200\r\n        )\r\n  \r\n        if (document.createEvent) {\r\n          var event = document.createEvent('HTMLEvents')\r\n          event.initEvent('resize', true, true)\r\n          window.dispatchEvent(event)\r\n        } else if (document.createEventObject) {\r\n          window.fireEvent('onresize')\r\n        }\r\n      })\r\n    }*/\n}\n</script>\n\n<style>\n#app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 0px;\n}\n</style>\n"]}]}